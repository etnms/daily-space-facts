{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\etien\\\\Odin Project\\\\space-webapp\\\\client\\\\src\\\\Components\\\\Mars.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mars = () => {\n  _s();\n\n  const [apiKey, setApiKey] = useState();\n  const [begin, setBegin] = useState(true);\n  const [rdn, setRdn] = useState(Math.floor(Math.random() * 856));\n  const [image, setImage] = useState({\n    url: \"\",\n    cameraFullName: \"\",\n    cameraName: \"\",\n    datePicture: \"\",\n    roverName: \"\",\n    roverLaunchDate: \"\",\n    roverLandingDate: \"\",\n    status: \"\"\n  });\n  useEffect(() => {\n    getKey();\n    fetchUrl(rdn);\n  }, [rdn, apiKey]);\n\n  const getKey = async () => {\n    const query = await fetch(\"/api\");\n    const res = await query.json();\n    setApiKey(res.apiKey);\n  };\n\n  const fetchUrl = async () => {\n    setImage({\n      url: \"\"\n    });\n\n    if (apiKey !== undefined) {\n      const query = await fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=${apiKey}`);\n      const res = await query.json();\n      setImage({\n        url: res.photos[rdn].img_src,\n        cameraFullName: res.photos[rdn].camera.full_name,\n        cameraName: res.photos[rdn].camera.name,\n        datePicture: res.photos[rdn].earth_date,\n        roverName: res.photos[rdn].rover.name,\n        roverLaunchDate: res.photos[rdn].rover.launch_date,\n        roverLandingDate: res.photos[rdn].rover.landing_date,\n        status: res.photos[rdn].rover.status\n      });\n    }\n  };\n\n  const generateRdmImage = () => {\n    setRdn(Math.floor(Math.random() * 856));\n  };\n\n  return begin ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mars-rover-gallery-start\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Start exploring pictures from Mars!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"mars-begin-info\",\n      children: \"Click on the start button to start displaying random images from Mars.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-next-img\",\n      onClick: () => setBegin(false),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"mars-picture-info\",\n      children: \"(You might find that some pictures may be small, but that is their actual size!)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : image.url ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mars-rover-gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img-mars\",\n      src: image.url,\n      alt: \"random from rover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Image taken by \", image.roverName, \" using the \", image.cameraFullName, \"(\", image.cameraName, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", image.datePicture]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rover information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", image.roverName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Launching date: \", image.roverLaunchDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Landing date: \", image.roverLandingDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", image.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-next-img\",\n        onClick: () => generateRdmImage(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loaderWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mars, \"v2iuiMU+hXsrTtQNOnkLcCg9HRI=\");\n\n_c = Mars;\nexport default Mars;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mars\");","map":{"version":3,"sources":["C:/Users/etien/Odin Project/space-webapp/client/src/Components/Mars.js"],"names":["useEffect","useState","Mars","apiKey","setApiKey","begin","setBegin","rdn","setRdn","Math","floor","random","image","setImage","url","cameraFullName","cameraName","datePicture","roverName","roverLaunchDate","roverLandingDate","status","getKey","fetchUrl","query","fetch","res","json","undefined","photos","img_src","camera","full_name","name","earth_date","rover","launch_date","landing_date","generateRdmImage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Mars = () => {\r\n  const [apiKey, setApiKey] = useState();\r\n  const [begin, setBegin] = useState(true);\r\n  const [rdn, setRdn] = useState(Math.floor(Math.random() * 856));\r\n  const [image, setImage] = useState({\r\n    url: \"\",\r\n    cameraFullName: \"\",\r\n    cameraName: \"\",\r\n    datePicture: \"\",\r\n    roverName: \"\",\r\n    roverLaunchDate: \"\",\r\n    roverLandingDate: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getKey();\r\n    fetchUrl(rdn);\r\n  }, [rdn, apiKey]);\r\n\r\n  const getKey = async () => {\r\n    const query = await fetch(\"/api\");\r\n    const res = await query.json();\r\n    setApiKey(res.apiKey);\r\n\r\n  };\r\n\r\n  const fetchUrl = async () => {\r\n    setImage({ url: \"\" });\r\n    if (apiKey !== undefined) {\r\n      const query = await fetch(\r\n        `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=${apiKey}`\r\n      );\r\n      const res = await query.json();\r\n      setImage({\r\n        url: res.photos[rdn].img_src,\r\n        cameraFullName: res.photos[rdn].camera.full_name,\r\n        cameraName: res.photos[rdn].camera.name,\r\n        datePicture: res.photos[rdn].earth_date,\r\n        roverName: res.photos[rdn].rover.name,\r\n        roverLaunchDate: res.photos[rdn].rover.launch_date,\r\n        roverLandingDate: res.photos[rdn].rover.landing_date,\r\n        status: res.photos[rdn].rover.status,\r\n      });\r\n    }\r\n  };\r\n\r\n  const generateRdmImage = () => {\r\n    setRdn(Math.floor(Math.random() * 856));\r\n  };\r\n\r\n  return begin ? (\r\n    <div className=\"mars-rover-gallery-start\">\r\n      <h1 className=\"title\">Start exploring pictures from Mars!</h1>\r\n      <p id=\"mars-begin-info\">\r\n        Click on the start button to start displaying random images from Mars.\r\n      </p>\r\n      <button className=\"btn btn-next-img\" onClick={() => setBegin(false)}>\r\n        Start\r\n      </button>\r\n      <p id=\"mars-picture-info\">\r\n        (You might find that some pictures may be small, but that is their\r\n        actual size!)\r\n      </p>\r\n    </div>\r\n  ) : image.url ? (\r\n    <div className=\"mars-rover-gallery\">\r\n      <img className=\"img-mars\" src={image.url} alt=\"random from rover\"></img>\r\n      <div className=\"wrapper-text\">\r\n        <p>\r\n          Image taken by {image.roverName} using the {image.cameraFullName}(\r\n          {image.cameraName})\r\n        </p>\r\n        <p>Date: {image.datePicture}</p>\r\n        <h2>Rover information</h2>\r\n        <p>Name: {image.roverName}</p>\r\n        <p>Launching date: {image.roverLaunchDate}</p>\r\n        <p>Landing date: {image.roverLandingDate}</p>\r\n        <p>Status: {image.status}</p>\r\n        <button className=\"btn btn-next-img\" onClick={() => generateRdmImage()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loaderWrapper\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mars;\r\n"]},"metadata":{},"sourceType":"module"}