{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\etien\\\\Odin Project\\\\space-webapp\\\\client\\\\src\\\\Components\\\\Asteroids.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ToggleSwitch from \"./ToggleSwitch\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Asteroid = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [imperial, setImperial] = useState(false);\n  const [listAsteroids, setListAsteroids] = useState([]);\n  const tmpDate = new Date();\n  const day = tmpDate.getUTCDay() < 10 ? `0${tmpDate.getUTCDay().toString()}` : tmpDate.getUTCDay();\n  const month = tmpDate.getUTCMonth() + 1 < 10 ? `0${(tmpDate.getUTCMonth() + 1).toString()}` : tmpDate.getUTCMonth() + 1;\n  const year = tmpDate.getutcFullYear();\n  const date = `${year}-${month}-${day}`;\n  useEffect(() => {\n    asteroids();\n  }, []);\n\n  const asteroids = async () => {\n    console.log(date);\n    setLoading(true);\n    const query = {\n      method: \"GET\",\n      url: \"/api/near-earth-objects\",\n      params: {\n        start_date: date,\n        end_date: date\n      }\n    };\n    axios.request(query).then(response => {\n      setListAsteroids(response.data.near_earth_objects[date]);\n      setLoading(false);\n    }).catch(error => console.log(error));\n  };\n\n  const listMapped = listAsteroids.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"asteroid-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-objects\",\n      children: [\"Name: \", element.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Magnitude: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: element.absolute_magnitude_h\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Estimated Diameter: Min:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [imperial ? Math.round(element.estimated_diameter.feet.estimated_diameter_min * 100) / 100 : Math.round(element.estimated_diameter.meters.estimated_diameter_min * 100) / 100, imperial ? \"ft\" : \"m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \", \"- Max:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [imperial ? Math.round(element.estimated_diameter.feet.estimated_diameter_max * 100) / 100 : Math.round(element.estimated_diameter.meters.estimated_diameter_max * 100) / 100, imperial ? \"ft\" : \"m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Closest Approach Date:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [element.close_approach_data[0].close_approach_date_full, \" UTC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", \"Will miss the earth by:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [imperial ? Math.round(element.close_approach_data[0].miss_distance.kilometers) : Math.round(element.close_approach_data[0].miss_distance.miles), imperial ? \"miles\" : \"kms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Relative velocity:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [imperial ? Math.round(element.close_approach_data[0].relative_velocity.miles_per_hour * 100 / 100) : Math.round(element.close_approach_data[0].relative_velocity.kilometers_per_hour), imperial ? \"miles/hr\" : `km/hr (${Math.round(element.close_approach_data[0].relative_velocity.kilometers_per_second * 100) / 100}km/s)`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Potentially dangerous if impact:\", \" \", element.is_potentially_hazardous_asteroid ? /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, \"asteroid-\" + element.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-asteroid\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"asteroid-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Near Earth Objects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n        setImperial: setImperial\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"asteroid-list-cards\",\n        children: listMapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Asteroid, \"a5cHFnxlteTro6fZj67sfNy8AUw=\");\n\n_c = Asteroid;\nexport default Asteroid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Asteroid\");","map":{"version":3,"sources":["C:/Users/etien/Odin Project/space-webapp/client/src/Components/Asteroids.js"],"names":["useEffect","useState","ToggleSwitch","axios","Asteroid","loading","setLoading","imperial","setImperial","listAsteroids","setListAsteroids","tmpDate","Date","day","getUTCDay","toString","month","getUTCMonth","year","getutcFullYear","date","asteroids","console","log","query","method","url","params","start_date","end_date","request","then","response","data","near_earth_objects","catch","error","listMapped","map","element","name","absolute_magnitude_h","Math","round","estimated_diameter","feet","estimated_diameter_min","meters","estimated_diameter_max","close_approach_data","close_approach_date_full","miss_distance","kilometers","miles","relative_velocity","miles_per_hour","kilometers_per_hour","kilometers_per_second","is_potentially_hazardous_asteroid"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ToggleSwitch from \"./ToggleSwitch\";\r\nimport axios from \"axios\";\r\n\r\nconst Asteroid = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [imperial, setImperial] = useState(false);\r\n  const [listAsteroids, setListAsteroids] = useState([]);\r\n\r\n  const tmpDate = new Date();\r\n  const day =\r\n    tmpDate.getUTCDay() < 10\r\n      ? `0${tmpDate.getUTCDay().toString()}`\r\n      : tmpDate.getUTCDay();\r\n  const month =\r\n    tmpDate.getUTCMonth() + 1 < 10\r\n      ? `0${(tmpDate.getUTCMonth() + 1).toString()}`\r\n      : tmpDate.getUTCMonth() + 1;\r\n  const year = tmpDate.getutcFullYear();\r\n\r\n  const date = `${year}-${month}-${day}`;\r\n\r\n  useEffect(() => {\r\n    asteroids();\r\n  }, []);\r\n\r\n  const asteroids = async () => {\r\n    console.log(date);\r\n    setLoading(true);\r\n    const query = {\r\n      method: \"GET\",\r\n      url: \"/api/near-earth-objects\",\r\n      params: {\r\n        start_date: date,\r\n        end_date: date,\r\n      },\r\n    };\r\n    axios\r\n      .request(query)\r\n      .then((response) => {\r\n        setListAsteroids(response.data.near_earth_objects[date]);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const listMapped = listAsteroids.map((element) => (\r\n    <li className=\"asteroid-card\" key={\"asteroid-\" + element.name}>\r\n      <h1 className=\"title-objects\">Name: {element.name}</h1>\r\n      <p>\r\n        Magnitude: <strong>{element.absolute_magnitude_h}</strong>\r\n      </p>\r\n      <p>\r\n        Estimated Diameter: Min:{\" \"}\r\n        <strong>\r\n          {imperial\r\n            ? Math.round(\r\n                element.estimated_diameter.feet.estimated_diameter_min * 100\r\n              ) / 100\r\n            : Math.round(\r\n                element.estimated_diameter.meters.estimated_diameter_min * 100\r\n              ) / 100}\r\n          {imperial ? \"ft\" : \"m\"}\r\n        </strong>{\" \"}\r\n        - Max:{\" \"}\r\n        <strong>\r\n          {imperial\r\n            ? Math.round(\r\n                element.estimated_diameter.feet.estimated_diameter_max * 100\r\n              ) / 100\r\n            : Math.round(\r\n                element.estimated_diameter.meters.estimated_diameter_max * 100\r\n              ) / 100}\r\n          {imperial ? \"ft\" : \"m\"}\r\n        </strong>\r\n      </p>\r\n      <p>\r\n        Closest Approach Date:{\" \"}\r\n        <strong>\r\n          {element.close_approach_data[0].close_approach_date_full} UTC\r\n        </strong>\r\n      </p>\r\n      <p>\r\n        {\" \"}\r\n        Will miss the earth by:{\" \"}\r\n        <strong>\r\n          {imperial\r\n            ? Math.round(\r\n                element.close_approach_data[0].miss_distance.kilometers\r\n              )\r\n            : Math.round(element.close_approach_data[0].miss_distance.miles)}\r\n          {imperial ? \"miles\" : \"kms\"}\r\n        </strong>\r\n      </p>\r\n      <p>\r\n        Relative velocity:{\" \"}\r\n        <strong>\r\n          {imperial\r\n            ? Math.round(\r\n                (element.close_approach_data[0].relative_velocity\r\n                  .miles_per_hour *\r\n                  100) /\r\n                  100\r\n              )\r\n            : Math.round(\r\n                element.close_approach_data[0].relative_velocity\r\n                  .kilometers_per_hour\r\n              )}\r\n          {imperial\r\n            ? \"miles/hr\"\r\n            : `km/hr (${\r\n                Math.round(\r\n                  element.close_approach_data[0].relative_velocity\r\n                    .kilometers_per_second * 100\r\n                ) / 100\r\n              }km/s)`}\r\n        </strong>\r\n      </p>\r\n      <p>\r\n        Potentially dangerous if impact:{\" \"}\r\n        {element.is_potentially_hazardous_asteroid ? (\r\n          <strong>Yes</strong>\r\n        ) : (\r\n          \"No\"\r\n        )}\r\n      </p>\r\n    </li>\r\n  ));\r\n  return (\r\n    <div className=\"wrapper-asteroid\">\r\n      {loading ? (\r\n        <div className=\"loader\"></div>\r\n      ) : (\r\n        <main className=\"asteroid-page\">\r\n          <h1 className=\"title\">Near Earth Objects</h1>\r\n          <ToggleSwitch setImperial={setImperial}></ToggleSwitch>\r\n          <ul className=\"asteroid-list-cards\">{listMapped}</ul>\r\n        </main>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Asteroid;\r\n"]},"metadata":{},"sourceType":"module"}